.navbar-desktop a,.nav-right-item{
  color: #ecf0f1;
}

.cover{
  width: 100vw;
  height: 80vh;
  position: relative;
}

.cover .cover__image{
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 1;
}

.cover .cover__image img{
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cover .cover__mask{
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 30%;
  z-index: 2;
  background-image: linear-gradient(to bottom, rgba(0,0,0,0.5) 10%, transparent);
}

.cover .cover__lowerside{
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100px;
  z-index: 3;
}

.cover .cover__lowerside:before{
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 257px;
  background-image: url("../../sources/images/wave.png");
  background-repeat: no-repeat;
}

.image-grid{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  height: 500px;
  width: 80%;
}

.image-grid div > img{
  width: 98%;
  height: 98%;
  object-fit: cover;
}

.image-grid div:nth-child(1){
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.image-grid div:nth-child(2){
  grid-column: 2 / 4;
  grid-row: 1 / 2;
}

.image-grid div:nth-child(3){
  grid-column: 4 / 5;
  grid-row: 1 / 2;
}

.image-grid div:nth-child(4){
  grid-column: 1 / 3;
  grid-row: 2 / 3;
}

.image-grid div:nth-child(5){
  grid-column: 3 / 4;
  grid-row: 2 / 3;
}

.image-grid div:nth-child(6){
  grid-column: 4 / 5;
  grid-row: 2 / 3;
}

.image-grid div:nth-child(7){
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.image-grid div:nth-child(8){
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}

.image-grid div:nth-child(9){
  grid-column: 3 / 5;
  grid-row: 3 / 4;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: #2e2e2e;
  font-size: 4em;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(13px, 9999px, 33px, 0);
    transform: skew(0.82deg);
  }
  5% {
    clip: rect(70px, 9999px, 19px, 0);
    transform: skew(0.69deg);
  }
  10% {
    clip: rect(23px, 9999px, 20px, 0);
    transform: skew(0.67deg);
  }
  15% {
    clip: rect(57px, 9999px, 9px, 0);
    transform: skew(0.68deg);
  }
  20% {
    clip: rect(86px, 9999px, 91px, 0);
    transform: skew(0.86deg);
  }
  25% {
    clip: rect(95px, 9999px, 17px, 0);
    transform: skew(0.12deg);
  }
  30% {
    clip: rect(40px, 9999px, 17px, 0);
    transform: skew(0.35deg);
  }
  35% {
    clip: rect(36px, 9999px, 59px, 0);
    transform: skew(0.49deg);
  }
  40% {
    clip: rect(29px, 9999px, 3px, 0);
    transform: skew(0.5deg);
  }
  45% {
    clip: rect(15px, 9999px, 39px, 0);
    transform: skew(0.09deg);
  }
  50% {
    clip: rect(67px, 9999px, 58px, 0);
    transform: skew(0.99deg);
  }
  55% {
    clip: rect(78px, 9999px, 31px, 0);
    transform: skew(0.48deg);
  }
  60% {
    clip: rect(59px, 9999px, 46px, 0);
    transform: skew(0.02deg);
  }
  65% {
    clip: rect(36px, 9999px, 70px, 0);
    transform: skew(0.14deg);
  }
  70% {
    clip: rect(98px, 9999px, 86px, 0);
    transform: skew(0.09deg);
  }
  75% {
    clip: rect(92px, 9999px, 40px, 0);
    transform: skew(0.5deg);
  }
  80% {
    clip: rect(6px, 9999px, 63px, 0);
    transform: skew(0.07deg);
  }
  85% {
    clip: rect(63px, 9999px, 74px, 0);
    transform: skew(0.38deg);
  }
  90% {
    clip: rect(18px, 9999px, 98px, 0);
    transform: skew(0.5deg);
  }
  95% {
    clip: rect(79px, 9999px, 31px, 0);
    transform: skew(0.33deg);
  }
  100% {
    clip: rect(6px, 9999px, 13px, 0);
    transform: skew(0.62deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(89px, 9999px, 91px, 0);
    transform: skew(0.16deg);
  }
  5% {
    clip: rect(12px, 9999px, 65px, 0);
    transform: skew(0.29deg);
  }
  10% {
    clip: rect(45px, 9999px, 61px, 0);
    transform: skew(0.01deg);
  }
  15% {
    clip: rect(39px, 9999px, 46px, 0);
    transform: skew(0.97deg);
  }
  20% {
    clip: rect(36px, 9999px, 80px, 0);
    transform: skew(0.5deg);
  }
  25% {
    clip: rect(71px, 9999px, 2px, 0);
    transform: skew(0.38deg);
  }
  30% {
    clip: rect(21px, 9999px, 21px, 0);
    transform: skew(0.7deg);
  }
  35% {
    clip: rect(38px, 9999px, 48px, 0);
    transform: skew(0.23deg);
  }
  40% {
    clip: rect(35px, 9999px, 68px, 0);
    transform: skew(0.48deg);
  }
  45% {
    clip: rect(66px, 9999px, 36px, 0);
    transform: skew(0.06deg);
  }
  50% {
    clip: rect(52px, 9999px, 61px, 0);
    transform: skew(0.12deg);
  }
  55% {
    clip: rect(10px, 9999px, 1px, 0);
    transform: skew(0.92deg);
  }
  60% {
    clip: rect(17px, 9999px, 7px, 0);
    transform: skew(0.46deg);
  }
  65% {
    clip: rect(6px, 9999px, 26px, 0);
    transform: skew(0.04deg);
  }
  70% {
    clip: rect(29px, 9999px, 11px, 0);
    transform: skew(0.01deg);
  }
  75% {
    clip: rect(4px, 9999px, 56px, 0);
    transform: skew(0.01deg);
  }
  80% {
    clip: rect(68px, 9999px, 90px, 0);
    transform: skew(0.8deg);
  }
  85% {
    clip: rect(90px, 9999px, 48px, 0);
    transform: skew(0.07deg);
  }
  90% {
    clip: rect(30px, 9999px, 80px, 0);
    transform: skew(0.85deg);
  }
  95% {
    clip: rect(87px, 9999px, 69px, 0);
    transform: skew(0.06deg);
  }
  100% {
    clip: rect(15px, 9999px, 92px, 0);
    transform: skew(0.64deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(1deg);
  }
  10% {
    transform: skew(5deg);
  }
  20% {
    transform: skew(5deg);
  }
  30% {
    transform: skew(0deg);
  }
  40% {
    transform: skew(-4deg);
  }
  50% {
    transform: skew(5deg);
  }
  60% {
    transform: skew(0deg);
  }
  70% {
    transform: skew(-1deg);
  }
  80% {
    transform: skew(-3deg);
  }
  90% {
    transform: skew(5deg);
  }
  100% {
    transform: skew(-4deg);
  }
}

.triangle{
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 0 200px 100vw;
  border-color: transparent transparent #ecf0f1 transparent;
}

.triangle-white{
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 0 200px 100vw;
  border-color: transparent transparent white transparent;
}

.progressbar{
  counter-reset: step;
}

.p-container .progressbar li{
  list-style-type: none;
  width: 23%;
  float: left;
  font-size: 14px;
  position: relative;
  text-align: center;
  font-family: Comfortaa-Bold;
}

.p-container .progressbar li:before{
  width: 30px;
  height: 30px;
  content: counter(step);
  counter-increment: step;
  line-height: 30px;
  border: 2px solid #7d7d7d;
  display: block;
  text-align: center;
  margin: 0 auto 10px auto;
  border-radius: 50%;
  background-color: white;
}

.p-container .progressbar li:after{
  width: 100%;
  height: 2px;
  content: '';
  position: absolute;
  background: #7d7d7d;
  top: 15px;
  left: -40%;
  z-index: -1;
}

.p-container .progressbar li:first-child:after {
  content: none;
}

.progressbar li.active {
  color: green;
}

.progressbar li.active:before {
  border-color: #55b776;
}

.progressbar li.active + li:after {
  background-color: #55b776;
}

.st{
  font-family: iCielPanton-Black;
  font-size: 2.5em;
}

.mi-t{
  font-family: iCielPanton-Black;
  font-size: 3em;
  text-align: center;
}

.i-l{
  max-width: 400px;
  height: auto;
  object-fit: cover;
}

.donate-form{
  width: 100%;
}

.donate-form:first-child{
  background-color: #ecf0f1;
}

.row.no-gutters {
  margin-right: 0;
  margin-left: 0;
}
.row.no-gutters > [class^="col-"],
.row.no-gutters > [class*=" col-"] {
  padding-right: 0;
  padding-left: 0;
}

.d-m-form{
  width: 75%;
  height: 500px;
  background: white;
  border-radius: 20px;
}

.d-m-form .c-gr{
  width: 93%;
  background-color: #ecf0f1;
  border-radius: 35px;
  height: 50px;
}

.d-m-form .c-gr .c-t{
  font-family: Comfortaa-Bold;
  font-size: 16px;
}

.d-m-form .c-gr .c-in{
  font-family: iCielPanton-Black;
  letter-spacing: 3px;
  font-size: 16px;
}

.copy-c-btn{
  width: 40px;
  height: 40px;
  background: #2ecc71;
  color: white;
  border-radius: 50%;
}

#copy-c-info{
  background: #2ecc71;
  height: 45px;
  width: 150px;
  border-radius: 30px;
  color: white;
  font-family: Comfortaa-Bold;
}

.hv-c{
  width: 75%;
}

.hv-c *:not(i){
  font-family: Comfortaa-Bold;
}

#get-link-form{
  background: #e74c3c;
  height: 45px;
  width: 150px;
  border-radius: 30px;
  color: white;
  font-family: Comfortaa-Bold;
}

.p-regis{
  font-family: Comfortaa-Bold;
}

@media only screen and (max-width: 768px){
  .st{
    font-size: 18px !important;
  }

  .mi-t{
    font-size: 24px !important;
  }

  .i-l{
      width: 100px;
  }
}

@media only screen and (max-width: 576px){
  .d-m-form{
    width: 95%;
  }

  .p-regis{
    font-size: 14px;
  }
}
